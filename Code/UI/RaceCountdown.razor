@inherits Panel
@namespace SBRacer.Ui

<root>
	@if ( Player.Local.Racing && !string.IsNullOrEmpty( DisplayMessage ) )
	{
		<div class="race-start-countdown">@DisplayMessage</div>
	}
</root>

@code {
	private const float GoDisplayDuration = 2.0f;

	private string DisplayMessage { get; set; } = string.Empty;
	private int LastDisplayedSecond { get; set; } = -1;

	public override void Tick()
	{
		if ( !Player.Local.Racing )
		{
			ClearDisplay();
			return;
		}

		var state = RaceGame.Instance.State;

		if ( state == GameState.RaceCountdown )
		{
			var countdown = RaceGame.RaceCountdownDuration - RaceGame.Instance.TimeSinceStateStarted;
			var currentSecond = (int)MathF.Ceiling( countdown );

			if ( currentSecond != LastDisplayedSecond )
			{
				LastDisplayedSecond = currentSecond;
				UpdateDisplayForSecond( currentSecond );
			}
		}
		else
		{
			var timeSinceStateStarted = RaceGame.Instance.TimeSinceStateStarted;

			if ( timeSinceStateStarted < GoDisplayDuration )
			{
				if ( LastDisplayedSecond != 0 )
				{
					LastDisplayedSecond = 0;
					UpdateDisplayForSecond( 0 );
				}
			}
			else
			{
				ClearDisplay();
			}
		}
	}

	private void ClearDisplay()
	{
		DisplayMessage = string.Empty;
		LastDisplayedSecond = -1;
	}

	private void UpdateDisplayForSecond( int second )
	{
		if ( second > 0 )
		{
			DisplayMessage = $"{second}";
			Sound.Play( "race_beep" );
		}
		else
		{
			DisplayMessage = RaceMap.Instance.Type == MapType.Race ? "RACE!" : "FIGHT!";
			Sound.Play( "race_beep" );
		}
	}

	protected override int BuildHash()
	{
		return HashCode.Combine( DisplayMessage );
	}

}
